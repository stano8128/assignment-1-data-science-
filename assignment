import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns # Used for setting a clean aesthetic

sns.set_style("whitegrid")
plt.rcParams.update({'font.size': 12})

# 1. Data Extracted from the provided image (in thousands)
data = {
    'Month': ['07/2019', '08/2019', '09/2019', '10/2019', '11/2019'],
    'Searches': [50, 53, 59, 56, 62],
    'Direct': [39, 47, 42, 51, 51],
    'Social Media': [70, 80, 90, 87, 92]
}
df = pd.DataFrame(data)

# 2. Setup for Grouped Bar Chart
months = df['Month'].tolist()
x = np.arange(len(months))  # the label locations
width = 0.25  # the width of the bars

fig, ax = plt.subplots(figsize=(12, 7))

# 3. Create the Bars using colors similar to the original image
rects1 = ax.bar(x - width, df['Searches'], width, label='Searches', color='#1f77b4') # Blue
rects2 = ax.bar(x, df['Direct'], width, label='Direct', color='#d62728') # Pink/Red
rects3 = ax.bar(x + width, df['Social Media'], width, label='Social Media', color='#ffdb58') # Yellow/Orange

# 4. Add labels, title, and custom Y-axis
ax.set_title('Visitors by web traffic sources', fontsize=18)
ax.set_ylabel('Visitors\n(in thousands)', fontsize=14, rotation=0, ha='right', va='center')
ax.set_xlabel('months', fontsize=14, ha='right')

ax.set_xticks(x)
ax.set_xticklabels(months)
ax.set_yticks(np.arange(0, 101, 20)) # Y-ticks at 0, 20, 40, 60, 80, 100
ax.set_ylim(0, 110)

# 5. Function to add data labels on top of the bars
def autolabel(rects):
    for rect in rects:
        height = rect.get_height()
        ax.annotate('{}'.format(height),
                    xy=(rect.get_x() + rect.get_width() / 2, height),
                    xytext=(0, 3),  # 3 points vertical offset
                    textcoords="offset points",
                    ha='center', va='bottom',
                    fontsize=10)

autolabel(rects1)
autolabel(rects2)
autolabel(rects3)

# 6. Add the legend below the chart area (as in the original)
ax.legend(loc='lower center', bbox_to_anchor=(0.5, -0.15),
          fancybox=True, shadow=False, ncol=3, fontsize=12)

plt.tight_layout()
plt.show()
